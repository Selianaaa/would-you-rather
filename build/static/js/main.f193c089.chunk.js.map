{"version":3,"sources":["constants/_users.constants.js","constants/_questions.constants.js","constants/_menu_links.constants.js","helpers/_local_storage.js","store/reducers/_users.reducer.js","store/reducers/_questions.reducer.js","store/_store.js","utils/_data.js","store/actions/_users.actions.js","store/actions/_questions.actions.js","store/actions/_app.actions.js","assets/icons/preloader.svg","components/preloaders/_Preloader.js","components/menus/_MenuUser.js","components/menus/_SideMenu.js","components/menus/_Navbar.js","components/cards/_questionCard/fragments/_ContentFragment.js","components/cards/_questionCard/fragments/_ButtonFragment.js","components/cards/_questionCard/_QuestionCard.js","routes/_AppRouter.js","App.js","index.js"],"names":["usersConstants","SET_USERS","SET_USERS_REQUSET","SET_LOGGED_USER","LOGOUT_USER","SET_SAVING_ANSWER","ADD_USER_ANSWER","questionsConstants","SET_QUESTIONS","SET_QUESTIONS_REQUSET","SET_ADDING_QUESTION","menuLinks","route","title","key","value","localStorage","setItem","JSON","stringify","initialState","users","users_request","logged_user","parse","getItem","logged","saving_answer","questions","questions_request","adding_question","rootReducer","combineReducers","state","type","payload","LSActions","SAVING_ANSWER","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","newQuestions","slice","push","newUsers","user","find","_saveQuestionAnswer","qId","answer","setUsersRequest","inRequest","setUsers","dispatch","getUsers","a","console","log","setLoggedUser","userData","logout","history","setSavingAnswer","saveUserAnswer","questionId","answerOption","getState","loggedUser","newUserData","questionsActions","saveQuestionAnswer","saveUserQuestion","concat","setQuestionsRequest","setQuestions","getQuestions","userId","catch","e","warn","setAddingQuestion","addQuestion","options","usersActions","startApp","Preloader","className","src","Spinner","alt","draggable","MenuUser","isButton","clickHandler","otherProps","userCard","style","backgroundImage","onClick","SideMenu","connect","bindActionCreators","closeMenu","useHistory","menuRef","useRef","handleOutsideClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","marginTop","map","link","to","exact","activeClassName","Navbar","userIsLogged","useState","opened","setOpened","marginLeft","ContentFragment","mode","possibleAnswers","selectedAnswer","setSelectedAnswer","loggedUserAnswered","loggedUserId","answersAmount","amount","forEach","length","userVoted","includes","votesPercentage","votesAmount","round","transform","checked","onChange","ButtonFragment","handleSubmit","disabled","QuestionCard","questionAuthor","Object","keys","HomePage","React","lazy","AddPage","QuestionPage","LeaderboardPage","AuthorizationPage","NotFoundPage","AppRouter","fallback","path","component","App","useDispatch","appActions","Store","root","getElementById","ReactDOM","render"],"mappings":"iOAAO,MAAMA,EAAiB,CAC5BC,UAAW,YACXC,kBAAmB,oBAEnBC,gBAAiB,WACjBC,YAAa,SAEbC,kBAAmB,oBACnBC,gBAAiB,mBCRNC,EAAqB,CAChCC,cAAe,gBACfC,sBAAuB,wBAEvBC,oBAAqB,uBCJVC,EAAY,CACvB,CACEC,MAAO,IACPC,MAAO,QAET,CACED,MAAO,OACPC,MAAO,gBAET,CACED,MAAO,eACPC,MAAO,kB,suBCHI,MARG,CAACC,EAAKC,KACtBC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,KCE3C,MAAMK,EAAe,CACnBC,MAAO,GACPC,eAAe,EAEfC,YAAaL,KAAKM,MAAMR,aAAaS,QAAQ,gBAAkB,KAC/DC,OAAQR,KAAKM,MAAMR,aAAaS,QAAQ,aAAc,EAEtDE,eAAe,GCRXP,EAAe,CACnBQ,UAAW,GACXC,mBAAmB,EAEnBC,iBAAiB,GCDbC,EAAcC,YAAgB,CAClCX,MFO0B,SAC1BY,EAAQb,GACR,KAAEc,EAAF,QAAQC,EAAU,OAElB,OAAQD,GACN,KAAKlC,IAAeC,UAClB,OAAO,2BACFgC,GADL,IAEEZ,MAAOc,IAEX,KAAKnC,IAAeE,kBAClB,OAAO,2BACF+B,GADL,IAEEX,cAAea,IAEnB,KAAKnC,IAAeG,gBAIlB,OAHAiC,EAAoB,aAAcD,GAClCC,EAAoB,UAAU,GAEvB,2BACFH,GADL,IAEEV,YAAaY,EACbT,QAAQ,IAGZ,KAAK1B,IAAeI,YAIlB,OAHAgC,EAAoB,aAAc,MAClCA,EAAoB,UAAU,GAEvB,2BACFH,GADL,IAEEV,YAAa,KACbG,QAAQ,IAGZ,KAAK1B,IAAeqC,cAClB,OAAO,2BACFJ,GADL,IAEEN,cAAeQ,IAEnB,QACE,OAAOF,IE/CXL,UDE8B,SAC9BK,EAAQb,GACR,KAAEc,EAAF,QAAQC,EAAU,OAElB,OAAQD,GACN,KAAK3B,IAAmBC,cACtB,OAAO,2BACFyB,GADL,IAEEL,UAAWO,IAGf,KAAK5B,IAAmBE,sBACtB,OAAO,2BACFwB,GADL,IAEEJ,kBAAmBM,IAEvB,KAAK5B,IAAmBG,oBACtB,OAAO,2BACFuB,GADL,IAEEH,gBAAiBK,IAGrB,QACE,OAAOF,MCtBPK,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,YACnBZ,EACAO,EAAiBM,YAAgBC,O,4BCdnC,IAAIxB,EAAQ,CACV,CACEyB,GAAI,WACJC,KAAM,YACNC,UACE,yEACFC,QAAS,CACP,yBAA0B,YAC1B,uBAAwB,YACxBC,uBAAwB,YACxBC,sBAAuB,aAEzBvB,UAAW,CAAC,yBAA0B,2BAExC,CACEkB,GAAI,gBACJC,KAAM,iBACNC,UACE,+KACFC,QAAS,CACPG,sBAAuB,YACvBC,uBAAwB,aAE1BzB,UAAW,CAAC,wBAAyB,0BAEvC,CACEkB,GAAI,UACJC,KAAM,WACNC,UACE,mKACFC,QAAS,CACPI,uBAAwB,YACxBD,sBAAuB,YACvB,uBAAwB,aAE1BxB,UAAW,CAAC,uBAAwB,4BAIpCA,EAAY,CACd,CACEkB,GAAI,yBACJQ,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,YACRC,KAAM,mCAERC,UAAW,CACTF,MAAO,GACPC,KAAM,mCAGV,CACEZ,GAAI,uBACJQ,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,sBAERC,UAAW,CACTF,MAAO,CAAC,UAAW,YACnBC,KAAM,0BAGV,CACEZ,GAAI,yBACJQ,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,kBAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,kBAGV,CACEZ,GAAI,wBACJQ,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,4BAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,4BAGV,CACEZ,GAAI,wBACJQ,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,iBACRC,KAAM,qBAERC,UAAW,CACTF,MAAO,CAAC,WACRC,KAAM,oCAGV,CACEZ,GAAI,yBACJQ,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,WACRC,KAAM,oBAERC,UAAW,CACTF,MAAO,CAAC,iBACRC,KAAM,iBAwCL,SAASE,EAAcC,GAC5B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAaJ,EAASP,OACtBY,EAnBV,UAAwB,UAAEV,EAAF,UAAaG,EAAb,OAAwBL,IAC9C,MAAO,CACLR,GAPAqB,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAOxCf,UAAWgB,KAAKC,MAChBlB,SACAE,UAAW,CACTC,MAAO,GACPC,KAAMF,GAERG,UAAW,CACTF,MAAO,GACPC,KAAMC,IAQkBc,CAAeZ,GAEzCa,YAAW,KACT,MAAMC,EAAe/C,EAAUgD,QAC/BD,EAAaE,KAAKX,GAClBtC,EAAY+C,EAEZ,MAAMG,EAAWzD,EAAMuD,QACjBG,EAAOD,EAASE,MAAMD,GAASA,EAAKjC,KAAOmB,IAE7Cc,GACFA,EAAKnD,UAAUiD,KAAKX,EAAkBpB,IAGxCzB,EAAQyD,EAERf,EAAIG,KACH,QAIA,SAASe,GAAoB,WAAEhB,EAAF,IAAciB,EAAd,OAAmBC,IACrD,OAAO,IAAIrB,SAAQ,CAACC,EAAKC,KACvBU,YAAW,KACT,MAAMI,EAAWzD,EAAMuD,QACjBG,EAAOD,EAASE,MAAMD,GAASA,EAAKjC,KAAOmB,IAE7Cc,IACFA,EAAK9B,QAAQiC,GAAOC,GAGtB9D,EAAQyD,EAER,MAAMH,EAAe/C,EAAUgD,QACzBf,EAAWc,EAAaK,MAAMnB,GAAaA,EAASf,KAAOoC,IAE7DrB,GACFA,EAASsB,GAAQ1B,MAAMoB,KAAKZ,GAG9BrC,EAAY+C,EAEZZ,EAAI,CAAE1C,MAAF,EAASO,UAAT,MACH,QCjMP,MAAMwD,EAAmBC,IAAD,CACtBnD,KAAMlC,IAAeE,kBACrBiC,QAASkD,IAOEC,EAAYjE,GACfkE,IACNA,EAAS,CACPrD,KAAMlC,IAAeC,UACrBkC,QAASd,KAQFmE,EAAW,IACtB,uCAAO,WAAOD,GAAP,eAAAE,EAAA,6DACLF,EAASH,GAAgB,IADpB,kBD2FA,IAAItB,SAAQ,CAACC,EAAKC,KACvBU,YAAW,IAAMX,EAAI1C,IAAQ,QC5FxB,OAIGA,EAJH,OAKHkE,EAASD,EAASjE,IALf,gDAOHqE,QAAQC,IAAR,MAPG,QAULJ,EAASH,GAAgB,IAVpB,yDAAP,sDAkBWQ,EAAiBC,GACpBN,IACNA,EAAS,CACPrD,KAAMlC,IAAeG,gBACrBgC,QAAS0D,KAQFC,EAAUC,GACbR,IACNQ,EAAQlB,KAAK,KACbU,EAAS,CACPrD,KAAMlC,IAAeI,eASrB4F,EAAmBX,IAAD,CACtBnD,KAAMlC,IAAeK,kBACrB8B,QAASkD,IAMEY,EAAiB,CAACC,EAAYC,IACzC,uCAAO,WAAOZ,EAAUa,GAAjB,iBAAAX,EAAA,sDACgBY,EAAeD,IAAW/E,MAAvCE,YAERgE,EAASS,GAAgB,IAEnBM,EALD,2BAMAD,GANA,IAOHpD,QAAQ,2BACHoD,EAAWpD,SADT,IAEL,CAACiD,GAAaC,MAIlBT,QAAQC,IAAIW,GAEZf,EAASK,EAAcU,IACvBf,EACEgB,EAAiBC,mBACfN,EACAC,EACAE,EAAWvD,KAIfyC,EAASS,GAAgB,IAxBpB,2CAAP,wDA+BWS,EAAoBP,GAC/B,uCAAO,WAAOX,EAAUa,GAAjB,iBAAAX,EAAA,sDACgBY,EAAeD,IAAW/E,MAAvCE,YAEF+E,EAHD,2BAIAD,GAJA,IAKHzE,UAAWyE,EAAWzE,UAAU8E,OAAOR,KAGzCR,QAAQC,IAAIW,GAEZf,EAASK,EAAcU,IAVlB,2CAAP,wDC1GIK,EAAuBtB,IAAD,CAC1BnD,KAAM3B,IAAmBE,sBACzB0B,QAASkD,IAOEuB,EAAgBhF,GACnB2D,IACNA,EAAS,CACPrD,KAAM3B,IAAmBC,cACzB2B,QAASP,KAQFiF,EAAe,IAC1B,uCAAO,WAAOtB,GAAP,eAAAE,EAAA,6DACLF,EAASoB,GAAoB,IADxB,kBFiGA,IAAI7C,SAAQ,CAACC,EAAKC,KACvBU,YAAW,IAAMX,EAAInC,IAAY,QElG5B,OAIGA,EAJH,OAKH2D,EAASqB,EAAahF,IALnB,gDAOH8D,QAAQC,IAAR,MAPG,QAULJ,EAASoB,GAAoB,IAVxB,yDAAP,sDAiBWH,EAAqB,CAACN,EAAYC,EAAcW,IAC3D,uCAAO,WAAOvB,EAAUa,GAAjB,mBAAAX,EAAA,6DACG7D,EAAcwE,IAAWxE,UAAzBA,UAEF+C,EAAe/C,EAAUgD,SAEzBf,EAAWc,EAAaK,MAC3BnB,GAAaA,EAASf,KAAOoD,MAI9BrC,EAASsC,GAAc1C,MAAMoB,KAAKiC,GAGpCvB,EAASqB,EAAajC,IAbjB,kBAeEM,EAAoB,CACzBhB,WAAY6C,EACZ5B,IAAKgB,EACLf,OAAQgB,IACPY,OAAOC,IACRtB,QAAQuB,KAAK,qCAAsCD,OApBhD,2CAAP,wDA6BIE,EAAqB7B,IAAD,CACxBnD,KAAM3B,IAAmBG,oBACzByB,QAASkD,IAME8B,EAAc,CAACC,EAASN,EAAQf,IAC3C,uCAAO,WAAOR,EAAUa,GAAjB,mBAAAX,EAAA,6DACG7D,EAAcwE,IAAWxE,UAAzBA,UAER2D,EAAS2B,GAAkB,IAHtB,kBAMoBtD,EAAc,CACnCJ,UAAW4D,EAAQ5D,UACnBG,UAAWyD,EAAQzD,UACnBL,OAAQwD,IATP,OAMGjD,EANH,QAYGc,EAAe/C,EAAUgD,SAClBC,KAAKhB,GAElB0B,EAASqB,EAAajC,IACtBY,EAAS8B,EAAaZ,iBAAiB5C,EAASf,KAEhDiD,EAAQlB,KAAK,KAlBV,kDAoBHa,QAAQC,IAAR,MApBG,QAuBLJ,EAAS2B,GAAkB,IAvBtB,0DAAP,wDCjFWI,EAAW,IACd/B,IACNA,EAAS8B,EAAa7B,YACtBD,EAASgB,EAAiBM,kB,oJCRf,MAA0B,sC,eCKlC,MAAMU,EAAY,IACvB,qBAAKC,UAAU,YAAf,SACE,qBACEA,UAAU,qBACVC,IAAKC,EACLC,IAAI,UACJC,WAAW,M,sECPV,MAAMC,EAAY,IAKlB,IAAD,IAJJC,gBAII,SAHJC,EAGI,EAHJA,aACA1B,EAEI,EAFJA,WACG2B,EACC,wDACJ,MAAMC,EACJ,eAAC,WAAD,WACE,qBACET,UAAU,oBACVU,MAAO,CACLC,gBAAgB,OAAD,OAAS9B,EAAWrD,UAApB,QAGnB,qBAAKwE,UAAU,kBAAf,SAAkCnB,EAAWtD,UAIjD,OAAI+E,EAEA,6CAAKN,UAAU,gBAAgBY,QAASL,GAAkBC,GAA1D,aACGC,KAML,6CAAKT,UAAU,aAAgBQ,GAA/B,aACGC,M,iBCtBP,MAkDaI,EAAWC,aARA,EAAGjH,YAAH,CACtBgF,WAAYhF,EAAME,gBAGQgE,GAAD,eACtBgD,YAAmBlB,IAAc9B,KAGd+C,EAlDN,EAAGjC,aAAYmC,YAAW1C,aAC1C,MAAMC,EAAU0C,cACVC,EAAUC,mBAEVC,EAAsB5B,IACtB0B,EAAQG,UAAYH,EAAQG,QAAQC,SAAS9B,EAAE+B,SACjDP,KASJ,OALAQ,qBAAU,KACRC,SAASC,iBAAiB,QAASN,GAC5B,IAAMK,SAASE,oBAAoB,QAASP,MAGhDvC,EAGH,sBAAKmB,UAAU,YAAY4B,IAAKV,EAAhC,UACE,qBAAKlB,UAAU,uBAAuBY,QAASI,IAC/C,cAACX,EAAD,CAAUxB,WAAYA,EAAY6B,MAAO,CAAEmB,UAAW,UAErD1I,IAAU2I,KAAKC,GACd,cAAC,IAAD,CAEEC,GAAID,EAAK3I,MACT6I,OAAK,EACLrB,QAASI,EACThB,UAAU,yBACVkC,gBAAgB,iCANlB,SAQGH,EAAK1I,OAPD0I,EAAK3I,SAWd,qBAAK4G,UAAU,iBAAiBY,QAAS,IAAMtC,EAAOC,GAAtD,uBApBoB,Q,MCb1B,MAqDa4D,EAASrB,aATE,EAAGjH,YAAH,CACtBgF,WAAYhF,EAAME,YAClBqI,aAAcvI,EAAMK,WAGM6D,GAAD,eACtBgD,YAAmBlB,IAAc9B,KAGhB+C,EArDN,EAAGjC,aAAYuD,mBAAoB,MAAD,EACpBC,oBAAS,GADW,mBACzCC,EADyC,KACjCC,EADiC,KAGhD,OACE,sBAAKvC,UAAU,SAAf,UACGoC,EACC,eAAC,WAAD,WACE,cAAC,IAAD,CAAMpC,UAAU,wBAAwBgC,GAAG,IAA3C,+BAGA,qBAAKhC,UAAU,gBAAf,SACG7G,IAAU2I,KAAKC,GACd,cAAC,IAAD,CAEEC,GAAID,EAAK3I,MACT6I,OAAK,EACLjC,UAAU,eACVkC,gBAAgB,uBALlB,SAOGH,EAAK1I,OAND0I,EAAK3I,cAYlB,cAAC,IAAD,CAAM4G,UAAU,gBAAgBgC,GAAG,IAAnC,+BAKDI,GACC,cAAC/B,EAAD,CACEC,UAAQ,EACRC,aAAc,IAAMgC,GAAU,GAC9B1D,WAAYA,EACZ6B,MAAO,CAAE8B,WAAY,UAIxBF,GAAU,cAACzB,EAAD,CAAUG,UAAW,IAAMuB,GAAU,W,MC/C/C,MAAME,EAAkB,EAC7BC,OACAC,kBACAC,iBACAC,oBACAC,qBACAC,mBAEA,MAAMC,EAAgB,KACpB,IAAIC,EAAS,EAKb,OAJAN,EAAgBO,SAASvF,IACvBsF,GAAUtF,EAAO1B,MAAMkH,UAGlBF,GAGHG,EAAanH,GAAUA,EAAMoH,SAASN,GAEtCO,EAAmBC,GACvB5G,KAAK6G,MAAqB,IAAdD,EAAqBP,KAEnC,MAAa,YAATN,EAEA,qBAAK1C,UAAU,+BAAf,mBAAkD2C,EAAgB,GAAGzG,KAArE,YAIA4G,EAEA,sBAAK9C,UAAU,SAAf,UACE,qBAAKA,UAAU,gBAAf,qBACA,qBAAKA,UAAU,gBAAf,SACG2C,EAAgBb,KAAKnE,GACpB,sBACEqC,UAAS,uBACPoD,EAAUzF,EAAO1B,OAAS,2BAA6B,IAF3D,UAMGmH,EAAUzF,EAAO1B,QAChB,qBAAK+D,UAAU,aAAf,SACE,8CAGJ,qBAAKA,UAAU,eAAf,SAA+BrC,EAAOzB,OACtC,sBAAK8D,UAAU,cAAf,UACE,mBAAGA,UAAU,0BAAb,mBAA2CsD,EACzC3F,EAAO1B,MAAMkH,QADf,OAGA,qBACEnD,UAAU,sBACVU,MAAO,CACL+C,UAAU,cAAD,OAAgBH,EACvB3F,EAAO1B,MAAMkH,QADN,YAMf,qBAAKnD,UAAU,eAAf,mBACErC,EAAO1B,MAAMkH,OADf,eAEOH,IAFP,cArBKrF,EAAOrC,WAgCtB,mCACGqH,EAAgBb,KAAKnE,GACpB,wBAAOqC,UAAU,gCAAjB,UACE,uBACEtF,KAAK,QACLnB,MAAOoE,EAAOrC,GACdoI,QAAS/F,EAAOrC,KAAOsH,EAAetH,GACtCqI,SAAU,IAAMd,EAAkBlF,KAGpC,mBAAGqC,UAAU,gCAAb,SAA8CrC,EAAOzB,SARDyB,EAAOrC,S,MCvE9D,MAAMsI,EAAiB,EAC5BlB,OACAE,iBACAE,qBACAe,eACAnF,gBAEa,YAATgE,GAAuBI,EAWd,YAATJ,GAAsBI,EAEtB,cAAC,IAAD,CACEd,GAAE,oBAAetD,GACjBsB,UAAU,8BAFZ,wBASS,SAAT0C,GAAmBI,EAA2B,KAGhD,wBACE9C,UAAU,8BACV8D,SAAoC,IAA1BlB,EAAeO,OACzBvC,QAASiD,EAHX,oBAvBE,cAAC,IAAD,CACE7B,GAAE,oBAAetD,GACjBsB,UAAU,8BAFZ,oB,MCNN,MA+Ea+D,EAAejD,aATJ,EAAGjH,YAAH,CACtBA,MAAOA,EAAMA,MACbgF,WAAYhF,EAAME,gBAGQgE,GAAD,eACtBgD,YAAmBlB,IAAc9B,KAGV+C,EA/EN,EACpB4B,OAAO,OACP7I,QACAwC,WACAwC,aACAJ,iBACAuB,YAAY,OACP,MACGhE,EAAqCK,EAArCL,UAAWG,EAA0BE,EAA1BF,UAAWL,EAAeO,EAAfP,OAAQR,EAAOe,EAAPf,GAChC0I,EAAiBnK,EAAM2D,MAAMD,GAASA,EAAKjC,KAAOQ,IAElDgH,EAAqB,IACLmB,OAAOC,KAAKrF,EAAWpD,SAExB4H,SAAShH,EAASf,IAGjCqH,EAAkB,CACtB,CACErH,GAAI,YACJY,KAAMF,EAAUE,KAChBD,MAAOD,EAAUC,OAEnB,CACEX,GAAI,YACJY,KAAMC,EAAUD,KAChBD,MAAOE,EAAUF,QAnBjB,EAsBwCoG,mBAAS,IAtBjD,mBAsBGO,EAtBH,KAsBmBC,EAtBnB,KAwBJ,OACE,sBAAK7C,UAAS,wBAAmBA,GAAjC,UACGgE,GACC,sBAAKhE,UAAU,wBAAf,UACE,qBAAKA,UAAU,8BAAf,SACGgE,EAAezI,OAElB,qBACEyE,UAAU,gCACVU,MAAO,CACLC,gBAAgB,OAAD,OAASqD,EAAexI,UAAxB,WAMvB,sBAAKwE,UAAU,yBAAf,UACE,qBAAKA,UAAU,gCAAf,8BAEA,cAACyC,EAAD,CACEC,KAAMA,EACNC,gBAAiBA,EACjBC,eAAgBA,EAChBE,mBAAoBA,IACpBD,kBAAoBlF,GAAWkF,EAAkBlF,GACjDoF,aAAclE,EAAWvD,KAE3B,cAACsI,EAAD,CACElB,KAAMA,EACNI,mBAAoBA,IACpBF,eAAgBA,EAChBiB,aAAc,IAAMpF,EAAenD,EAAIsH,EAAetH,IACtDoD,WAAYpD,c,wRClEtB,MAAM6I,EAAWC,IAAMC,MAAK,IAAM,+BAC5BC,EAAUF,IAAMC,MAAK,IAAM,+BAC3BE,EAAeH,IAAMC,MAAK,IAAM,+BAChCG,EAAkBJ,IAAMC,MAAK,IAAM,+BACnCI,EAAoBL,IAAMC,MAAK,IACnC,+BAEIK,EAAeN,IAAMC,MAAK,IAAM,+BAEzBM,EAAY,IAErB,cAAC,IAAD,UACE,sBAAK3E,UAAU,OAAf,UACE,cAAC,IAAD,IAEA,qBAAKA,UAAU,UAAf,SACE,cAAC,WAAD,CAAU4E,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3C,OAAK,EAAC4C,KAAK,IAAIC,UAAWX,IACjC,cAAC,IAAD,CAAOU,KAAK,eAAeC,UAAWN,IACtC,cAAC,IAAD,CAAOK,KAAK,iBAAiBC,UAAWP,IACxC,cAAC,IAAD,CAAOM,KAAK,OAAOC,UAAWR,IAC9B,cAAC,IAAD,CAAOO,KAAK,iBAAiBC,UAAWL,IACxC,cAAC,IAAD,CAAOI,KAAK,IAAIC,UAAWJ,gB,MCP1BK,MAdf,WACE,MAAMhH,EAAWiH,cAMjB,OAJAxD,qBAAU,KACRzD,EAASkH,IAAWnF,cACnB,CAAC/B,IAGF,qBAAKiC,UAAU,MAAf,SACE,cAAC2E,EAAD,OCTN,MAAMO,EAAQhK,IACRiK,EAAO1D,SAAS2D,eAAe,QAErCC,IAASC,OACP,cAAC,IAAD,CAAUpK,MAAOgK,EAAjB,SACE,cAAC,EAAD,MAEFC,K","file":"static/js/main.f193c089.chunk.js","sourcesContent":["export const usersConstants = {\n  SET_USERS: 'set users',\n  SET_USERS_REQUSET: 'set users request',\n\n  SET_LOGGED_USER: 'set user',\n  LOGOUT_USER: 'logout',\n\n  SET_SAVING_ANSWER: 'set saving answer',\n  ADD_USER_ANSWER: 'add user answer',\n};\n","export const questionsConstants = {\n  SET_QUESTIONS: 'set questions',\n  SET_QUESTIONS_REQUSET: 'set questions request',\n\n  SET_ADDING_QUESTION: 'set adding question',\n};\n","export const menuLinks = [\n  {\n    route: '/',\n    title: 'Home',\n  },\n  {\n    route: '/add',\n    title: 'New Question',\n  },\n  {\n    route: '/leaderboard',\n    title: 'Leader Board',\n  },\n];\n","const saveByKey = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst getByKey = (key) => {\n  return JSON.parse(localStorage.getItem(key));\n};\n\nexport default {\n  saveByKey,\n  getByKey,\n};\n","import { usersConstants } from '../../constants';\nimport { LSActions } from '../../helpers';\n\nconst initialState = {\n  users: [],\n  users_request: false,\n\n  logged_user: JSON.parse(localStorage.getItem('loggedUser')) || null,\n  logged: JSON.parse(localStorage.getItem('logged')) || false,\n\n  saving_answer: false,\n};\n\nexport const usersReducer = function (\n  state = initialState,\n  { type, payload = null }\n) {\n  switch (type) {\n    case usersConstants.SET_USERS:\n      return {\n        ...state,\n        users: payload,\n      };\n    case usersConstants.SET_USERS_REQUSET:\n      return {\n        ...state,\n        users_request: payload,\n      };\n    case usersConstants.SET_LOGGED_USER:\n      LSActions.saveByKey('loggedUser', payload);\n      LSActions.saveByKey('logged', true);\n\n      return {\n        ...state,\n        logged_user: payload,\n        logged: true,\n      };\n\n    case usersConstants.LOGOUT_USER:\n      LSActions.saveByKey('loggedUser', null);\n      LSActions.saveByKey('logged', false);\n\n      return {\n        ...state,\n        logged_user: null,\n        logged: false,\n      };\n\n    case usersConstants.SAVING_ANSWER:\n      return {\n        ...state,\n        saving_answer: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { questionsConstants } from '../../constants';\n\nconst initialState = {\n  questions: [],\n  questions_request: false,\n\n  adding_question: false,\n};\n\nexport const questionsReducer = function (\n  state = initialState,\n  { type, payload = null }\n) {\n  switch (type) {\n    case questionsConstants.SET_QUESTIONS:\n      return {\n        ...state,\n        questions: payload,\n      };\n\n    case questionsConstants.SET_QUESTIONS_REQUSET:\n      return {\n        ...state,\n        questions_request: payload,\n      };\n    case questionsConstants.SET_ADDING_QUESTION:\n      return {\n        ...state,\n        adding_question: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { usersReducer, questionsReducer } from './reducers';\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  questions: questionsReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","let users = [\n  {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL:\n      'https://tieuviemtonu.com/Data/images/khach-hang/icons-circle-women.png',\n    answers: {\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\n      loxhs1bqm25b708cmbf3g: 'optionTwo',\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n  },\n  {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL:\n      'https://w7.pngwing.com/pngs/229/332/png-transparent-riddarens-vårdcentral-computer-icons-avatar-user-computer-software-others-computer-network-angle-orange-thumbnail.png',\n    answers: {\n      vthrdm985a262al8qx3do: 'optionOne',\n      xj352vofupe1dqz9emx13r: 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL:\n      'https://sun6-23.userapi.com/s/v1/ig1/jgJChoUwkgOV159CjwE0LVYoccA0z7hVA0MraX5IGkX8d8SUEw6n3M1ZlksiC0iEFmpAGoeq.jpg?size=400x0&quality=96&crop=0,0,1024,1024&ava=1',\n    answers: {\n      xj352vofupe1dqz9emx13r: 'optionOne',\n      vthrdm985a262al8qx3do: 'optionTwo',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  },\n];\n\nlet questions = [\n  {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory',\n    },\n  },\n  {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain',\n    },\n  },\n  {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic',\n    },\n  },\n  {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer',\n    },\n  },\n  {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500',\n    },\n  },\n  {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift',\n    },\n  },\n];\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res(users), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res(questions), 1000);\n  });\n}\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nfunction formatQuestion({ optionOne, optionTwo, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOne,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwo,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      const newQuestions = questions.slice();\n      newQuestions.push(formattedQuestion);\n      questions = newQuestions;\n\n      const newUsers = users.slice();\n      const user = newUsers.find((user) => user.id === authedUser);\n\n      if (user) {\n        user.questions.push(formattedQuestion.id);\n      }\n\n      users = newUsers;\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qId, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const newUsers = users.slice();\n      const user = newUsers.find((user) => user.id === authedUser);\n\n      if (user) {\n        user.answers[qId] = answer;\n      }\n\n      users = newUsers;\n\n      const newQuestions = questions.slice();\n      const question = newQuestions.find((question) => question.id === qId);\n\n      if (question) {\n        question[answer].votes.push(authedUser);\n      }\n\n      questions = newQuestions;\n\n      res({ users, questions });\n    }, 500);\n  });\n}\n","import { usersConstants } from '../../constants';\nimport { _getUsers } from '../../utils';\nimport { questionsActions } from '../actions';\n\n/**\n * Setting users request condition\n * @param {boolean} inRequest - request condition\n */\nconst setUsersRequest = (inRequest) => ({\n  type: usersConstants.SET_USERS_REQUSET,\n  payload: inRequest,\n});\n\n/**\n * Setting users\n * @param {Array} users - users\n */\nexport const setUsers = (users) => {\n  return (dispatch) => {\n    dispatch({\n      type: usersConstants.SET_USERS,\n      payload: users,\n    });\n  };\n};\n\n/**\n * Request users\n */\nexport const getUsers = () => {\n  return async (dispatch) => {\n    dispatch(setUsersRequest(true));\n\n    try {\n      const users = await _getUsers();\n      dispatch(setUsers(users));\n    } catch (error) {\n      console.log(error);\n    }\n\n    dispatch(setUsersRequest(false));\n  };\n};\n\n/**\n * Setting logged user\n * @param {Object} userData - logged user\n */\nexport const setLoggedUser = (userData) => {\n  return (dispatch) => {\n    dispatch({\n      type: usersConstants.SET_LOGGED_USER,\n      payload: userData,\n    });\n  };\n};\n\n/**\n * Logout user\n */\nexport const logout = (history) => {\n  return (dispatch) => {\n    history.push('/');\n    dispatch({\n      type: usersConstants.LOGOUT_USER,\n    });\n  };\n};\n\n/**\n * Setting saving answer condition\n * @param {boolean} inRequest - saving condition\n */\nconst setSavingAnswer = (inRequest) => ({\n  type: usersConstants.SET_SAVING_ANSWER,\n  payload: inRequest,\n});\n\n/**\n * Save user answer to the question\n */\nexport const saveUserAnswer = (questionId, answerOption) => {\n  return async (dispatch, getState) => {\n    const { logged_user: loggedUser } = getState().users;\n\n    dispatch(setSavingAnswer(true));\n\n    const newUserData = {\n      ...loggedUser,\n      answers: {\n        ...loggedUser.answers,\n        [questionId]: answerOption,\n      },\n    };\n\n    console.log(newUserData);\n\n    dispatch(setLoggedUser(newUserData));\n    dispatch(\n      questionsActions.saveQuestionAnswer(\n        questionId,\n        answerOption,\n        loggedUser.id\n      )\n    );\n\n    dispatch(setSavingAnswer(false));\n  };\n};\n\n/**\n * Save user question\n */\nexport const saveUserQuestion = (questionId) => {\n  return async (dispatch, getState) => {\n    const { logged_user: loggedUser } = getState().users;\n\n    const newUserData = {\n      ...loggedUser,\n      questions: loggedUser.questions.concat(questionId),\n    };\n\n    console.log(newUserData);\n\n    dispatch(setLoggedUser(newUserData));\n  };\n};\n","import { usersActions } from '../actions';\nimport { questionsConstants } from '../../constants';\nimport { _getQuestions, _saveQuestionAnswer, _saveQuestion } from '../../utils';\n\n/**\n * Setting questions request condition\n * @param {boolean} inRequest - request condition\n */\nconst setQuestionsRequest = (inRequest) => ({\n  type: questionsConstants.SET_QUESTIONS_REQUSET,\n  payload: inRequest,\n});\n\n/**\n * Setting questions\n * @param {Array} questions - questions\n */\nexport const setQuestions = (questions) => {\n  return (dispatch) => {\n    dispatch({\n      type: questionsConstants.SET_QUESTIONS,\n      payload: questions,\n    });\n  };\n};\n\n/**\n * Request questions\n */\nexport const getQuestions = () => {\n  return async (dispatch) => {\n    dispatch(setQuestionsRequest(true));\n\n    try {\n      const questions = await _getQuestions();\n      dispatch(setQuestions(questions));\n    } catch (error) {\n      console.log(error);\n    }\n\n    dispatch(setQuestionsRequest(false));\n  };\n};\n\n/**\n * Save answer to the question\n */\nexport const saveQuestionAnswer = (questionId, answerOption, userId) => {\n  return async (dispatch, getState) => {\n    const { questions } = getState().questions;\n\n    const newQuestions = questions.slice();\n\n    const question = newQuestions.find(\n      (question) => question.id === questionId\n    );\n\n    if (question) {\n      question[answerOption].votes.push(userId);\n    }\n\n    dispatch(setQuestions(newQuestions));\n\n    return _saveQuestionAnswer({\n      authedUser: userId,\n      qId: questionId,\n      answer: answerOption,\n    }).catch((e) => {\n      console.warn('Error in handleSaveQuestionAnswer:', e);\n    });\n  };\n};\n\n/**\n * Adding questions request condition\n * @param {boolean} inRequest - request condition\n */\nconst setAddingQuestion = (inRequest) => ({\n  type: questionsConstants.SET_ADDING_QUESTION,\n  payload: inRequest,\n});\n\n/**\n * Add new question\n */\nexport const addQuestion = (options, userId, history) => {\n  return async (dispatch, getState) => {\n    const { questions } = getState().questions;\n\n    dispatch(setAddingQuestion(true));\n\n    try {\n      const question = await _saveQuestion({\n        optionOne: options.optionOne,\n        optionTwo: options.optionTwo,\n        author: userId,\n      });\n\n      const newQuestions = questions.slice();\n      newQuestions.push(question);\n\n      dispatch(setQuestions(newQuestions));\n      dispatch(usersActions.saveUserQuestion(question.id));\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n\n    dispatch(setAddingQuestion(false));\n  };\n};\n","import { usersActions, questionsActions } from '../actions';\n\n/**\n * Starting state\n */\nexport const startApp = () => {\n  return (dispatch) => {\n    dispatch(usersActions.getUsers());\n    dispatch(questionsActions.getQuestions());\n  };\n};\n","export default __webpack_public_path__ + \"static/media/preloader.e3102914.svg\";","import React from 'react';\n\nimport Spinner from '../../assets/icons/preloader.svg';\nimport './_preloader.scss';\n\nexport const Preloader = () => (\n  <div className=\"preloader\">\n    <img\n      className=\"preloader__spinner\"\n      src={Spinner}\n      alt=\"spinner\"\n      draggable={false}\n    />\n  </div>\n);\n","import React, { Fragment } from 'react';\n\nimport './_menu_user.scss';\n\nexport const MenuUser = ({\n  isButton = false,\n  clickHandler,\n  loggedUser,\n  ...otherProps\n}) => {\n  const userCard = (\n    <Fragment>\n      <div\n        className=\"menu_user__avatar\"\n        style={{\n          backgroundImage: `url(${loggedUser.avatarURL})`,\n        }}\n      ></div>\n      <div className=\"menu_user__name\">{loggedUser.name}</div>\n    </Fragment>\n  );\n\n  if (isButton) {\n    return (\n      <div className=\"menu_user_btn\" onClick={clickHandler} {...otherProps}>\n        {userCard}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"menu_user\" {...otherProps}>\n      {userCard}\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { usersActions } from '../../store';\nimport { MenuUser } from './_MenuUser';\nimport { menuLinks } from '../../constants';\nimport './_side_menu.scss';\n\nconst _SideMenu = ({ loggedUser, closeMenu, logout }) => {\n  const history = useHistory();\n  const menuRef = useRef();\n\n  const handleOutsideClick = (e) => {\n    if (menuRef.current && !menuRef.current.contains(e.target)) {\n      closeMenu();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  });\n\n  if (!loggedUser) return null;\n\n  return (\n    <div className=\"side_menu\" ref={menuRef}>\n      <div className=\"side_menu__close_btn\" onClick={closeMenu}></div>\n      <MenuUser loggedUser={loggedUser} style={{ marginTop: '30px' }} />\n\n      {menuLinks.map((link) => (\n        <NavLink\n          key={link.route}\n          to={link.route}\n          exact\n          onClick={closeMenu}\n          className=\"side_menu__mobile_link\"\n          activeClassName=\"side_menu__mobile_link__active\"\n        >\n          {link.title}\n        </NavLink>\n      ))}\n\n      <div className=\"side_menu__btn\" onClick={() => logout(history)}>\n        Logout\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users }) => ({\n  loggedUser: users.logged_user,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  ...bindActionCreators(usersActions, dispatch),\n});\n\nexport const SideMenu = connect(mapStateToProps, mapDispatchtoProps)(_SideMenu);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport { SideMenu } from './_SideMenu';\nimport { MenuUser } from './_MenuUser';\nimport { menuLinks } from '../../constants';\nimport { usersActions } from '../../store';\n\nimport './_navbar.scss';\n\nconst _Navbar = ({ loggedUser, userIsLogged }) => {\n  const [opened, setOpened] = useState(false);\n\n  return (\n    <div className=\"navbar\">\n      {userIsLogged ? (\n        <Fragment>\n          <Link className=\"navbar__title__logged\" to=\"/\">\n            Would You Rather?\n          </Link>\n          <div className=\"navbar__links\">\n            {menuLinks.map((link) => (\n              <NavLink\n                key={link.route}\n                to={link.route}\n                exact\n                className=\"navbar__link\"\n                activeClassName=\"navbar__link__active\"\n              >\n                {link.title}\n              </NavLink>\n            ))}\n          </div>\n        </Fragment>\n      ) : (\n        <Link className=\"navbar__title\" to=\"/\">\n          Would You Rather?\n        </Link>\n      )}\n\n      {userIsLogged && (\n        <MenuUser\n          isButton\n          clickHandler={() => setOpened(true)}\n          loggedUser={loggedUser}\n          style={{ marginLeft: '30px' }}\n        />\n      )}\n\n      {opened && <SideMenu closeMenu={() => setOpened(false)} />}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users }) => ({\n  loggedUser: users.logged_user,\n  userIsLogged: users.logged,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  ...bindActionCreators(usersActions, dispatch),\n});\n\nexport const Navbar = connect(mapStateToProps, mapDispatchtoProps)(_Navbar);\n","import React from 'react';\n\nimport './_content_fragment.scss';\n\nexport const ContentFragment = ({\n  mode,\n  possibleAnswers,\n  selectedAnswer,\n  setSelectedAnswer,\n  loggedUserAnswered,\n  loggedUserId,\n}) => {\n  const answersAmount = () => {\n    let amount = 0;\n    possibleAnswers.forEach((answer) => {\n      amount += answer.votes.length;\n    });\n\n    return amount;\n  };\n\n  const userVoted = (votes) => votes.includes(loggedUserId);\n\n  const votesPercentage = (votesAmount) =>\n    Math.round((votesAmount * 100) / answersAmount());\n\n  if (mode === 'preview') {\n    return (\n      <div className=\"question_card__content__text\">{`${possibleAnswers[0].text} or...`}</div>\n    );\n  }\n\n  if (loggedUserAnswered) {\n    return (\n      <div className=\"result\">\n        <div className=\"result__title\">Result:</div>\n        <div className=\"result__stats\">\n          {possibleAnswers.map((answer) => (\n            <div\n              className={`result__stat ${\n                userVoted(answer.votes) ? 'result__stat__users_vote' : ''\n              }`}\n              key={answer.id}\n            >\n              {userVoted(answer.votes) && (\n                <div className=\"user_voted\">\n                  <div>Your Vote</div>\n                </div>\n              )}\n              <div className=\"result__name\">{answer.text}</div>\n              <div className=\"result__bar\">\n                <p className=\"result__bar__percentage\">{`${votesPercentage(\n                  answer.votes.length\n                )}%`}</p>\n                <div\n                  className=\"result__bar__filled\"\n                  style={{\n                    transform: `translateX(${votesPercentage(\n                      answer.votes.length\n                    )}%)`,\n                  }}\n                ></div>\n              </div>\n              <div className=\"result__text\">{`${\n                answer.votes.length\n              } of ${answersAmount()} votes`}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {possibleAnswers.map((answer) => (\n        <label className=\"question_card__content__label\" key={answer.id}>\n          <input\n            type=\"radio\"\n            value={answer.id}\n            checked={answer.id === selectedAnswer.id}\n            onChange={() => setSelectedAnswer(answer)}\n          />\n\n          <p className=\"question_card__content__value\">{answer.text}</p>\n        </label>\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './_button_fragment.scss';\n\nexport const ButtonFragment = ({\n  mode,\n  selectedAnswer,\n  loggedUserAnswered,\n  handleSubmit,\n  questionId,\n}) => {\n  if (mode === 'preview' && !loggedUserAnswered) {\n    return (\n      <Link\n        to={`questions/${questionId}`}\n        className=\"question_card__content__btn\"\n      >\n        Answer\n      </Link>\n    );\n  }\n\n  if (mode === 'preview' && loggedUserAnswered) {\n    return (\n      <Link\n        to={`questions/${questionId}`}\n        className=\"question_card__content__btn\"\n      >\n        See Result\n      </Link>\n    );\n  }\n\n  if (mode === 'full' && loggedUserAnswered) return null;\n\n  return (\n    <button\n      className=\"question_card__content__btn\"\n      disabled={selectedAnswer.length === 0}\n      onClick={handleSubmit}\n    >\n      Submit\n    </button>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { usersActions } from '../../../store';\nimport { ContentFragment, ButtonFragment } from './fragments';\nimport './_question_card.scss';\n\nconst _QuestionCard = ({\n  mode = 'full',\n  users,\n  question,\n  loggedUser,\n  saveUserAnswer,\n  className = '',\n}) => {\n  const { optionOne, optionTwo, author, id } = question;\n  const questionAuthor = users.find((user) => user.id === author);\n\n  const loggedUserAnswered = () => {\n    const userAnswers = Object.keys(loggedUser.answers);\n\n    return userAnswers.includes(question.id);\n  };\n\n  const possibleAnswers = [\n    {\n      id: 'optionOne',\n      text: optionOne.text,\n      votes: optionOne.votes,\n    },\n    {\n      id: 'optionTwo',\n      text: optionTwo.text,\n      votes: optionTwo.votes,\n    },\n  ];\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n\n  return (\n    <div className={`question_card ${className}`}>\n      {questionAuthor && (\n        <div className=\"question_card__author\">\n          <div className=\"question_card__author__name\">\n            {questionAuthor.name}\n          </div>\n          <div\n            className=\"question_card__author__avatar\"\n            style={{\n              backgroundImage: `url(${questionAuthor.avatarURL})`,\n            }}\n          ></div>\n        </div>\n      )}\n\n      <div className=\"question_card__content\">\n        <div className=\"question_card__content__title\">Would You Rather</div>\n\n        <ContentFragment\n          mode={mode}\n          possibleAnswers={possibleAnswers}\n          selectedAnswer={selectedAnswer}\n          loggedUserAnswered={loggedUserAnswered()}\n          setSelectedAnswer={(answer) => setSelectedAnswer(answer)}\n          loggedUserId={loggedUser.id}\n        />\n        <ButtonFragment\n          mode={mode}\n          loggedUserAnswered={loggedUserAnswered()}\n          selectedAnswer={selectedAnswer}\n          handleSubmit={() => saveUserAnswer(id, selectedAnswer.id)}\n          questionId={id}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users }) => ({\n  users: users.users,\n  loggedUser: users.logged_user,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  ...bindActionCreators(usersActions, dispatch),\n});\n\nexport const QuestionCard = connect(\n  mapStateToProps,\n  mapDispatchtoProps\n)(_QuestionCard);\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Preloader, Navbar } from '../components';\n\nconst HomePage = React.lazy(() => import('../pages/HomePage'));\nconst AddPage = React.lazy(() => import('../pages/AddPage'));\nconst QuestionPage = React.lazy(() => import('../pages/QuestionPage'));\nconst LeaderboardPage = React.lazy(() => import('../pages/LeaderboardPage'));\nconst AuthorizationPage = React.lazy(() =>\n  import('../pages/AuthorizationPage')\n);\nconst NotFoundPage = React.lazy(() => import('../pages/NotFoundPage'));\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <div className=\"page\">\n        <Navbar />\n\n        <div className=\"content\">\n          <Suspense fallback={<Preloader />}>\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route path=\"/leaderboard\" component={LeaderboardPage} />\n              <Route path=\"/questions/:id\" component={QuestionPage} />\n              <Route path=\"/add\" component={AddPage} />\n              <Route path=\"/authorization\" component={AuthorizationPage} />\n              <Route path=\"*\" component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    </Router>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { appActions } from './store';\nimport { AppRouter } from './routes';\nimport './App.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(appActions.startApp());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport App from './App';\n\nconst Store = store;\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  root\n);\n"],"sourceRoot":""}