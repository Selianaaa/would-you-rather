{"version":3,"sources":["pages/QuestionPage/index.js"],"names":["QuestionPage","connect","users","questions","userLogged","logged","usersRequest","users_request","questionRequest","questions_request","id","useParams","useState","question","setQuestion","useEffect","length","pageQuestion","find","className","mode","to"],"mappings":"gNAOA,MAiDMA,EAAeC,aARG,EAAGC,QAAOC,gBAAV,CACtBC,WAAYF,EAAMG,OAClBC,aAAcJ,EAAMK,cAEpBJ,UAAWA,EAAUA,UACrBK,gBAAiBL,EAAUM,qBAGiB,KAAzBR,EAjDC,EACpBG,aACAD,YACAG,eACAE,sBACK,MACGE,EAAOC,cAAPD,GADJ,EAG4BE,mBAAS,MAHrC,mBAGGC,EAHH,KAGaC,EAHb,KAeJ,OAVAC,qBAAU,KACR,GAAIZ,EAAUa,OAAS,EAAG,CACxB,MAAMC,EAAed,EAAUe,MAAML,GAAaA,EAASH,KAAOA,IAE9DO,GACFH,EAAYG,MAGf,CAACd,EAAWO,IAEVN,EAIAS,EAIDP,GAAgBE,EACX,cAAC,IAAD,IAGJK,EAGH,qBAAKM,UAAU,gBAAf,SACE,cAAC,IAAD,CAAcN,SAAUA,EAAUO,KAAK,WAJrB,KAPb,cAAC,IAAD,CAAUC,GAAI,eAJd,cAAC,IAAD,CAAUA,GAAI,sBA8BVrB","file":"static/js/8.2fe23c3d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { QuestionCard, Preloader } from '../../components';\nimport './index.scss';\n\nconst _QuestionPage = ({\n  userLogged,\n  questions,\n  usersRequest,\n  questionRequest,\n}) => {\n  const { id } = useParams();\n\n  const [question, setQuestion] = useState(null);\n\n  useEffect(() => {\n    if (questions.length > 0) {\n      const pageQuestion = questions.find((question) => question.id === id);\n\n      if (pageQuestion) {\n        setQuestion(pageQuestion);\n      }\n    }\n  }, [questions, id]);\n\n  if (!userLogged) {\n    return <Redirect to={'/authorization'} />;\n  }\n\n  if (!question) {\n    return <Redirect to={'/not_found'} />;\n  }\n\n  if (usersRequest || questionRequest) {\n    return <Preloader />;\n  }\n\n  if (!question) return null;\n\n  return (\n    <div className=\"question_page\">\n      <QuestionCard question={question} mode=\"full\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users, questions }) => ({\n  userLogged: users.logged,\n  usersRequest: users.users_request,\n\n  questions: questions.questions,\n  questionRequest: questions.questions_request,\n});\n\nconst QuestionPage = connect(mapStateToProps, null)(_QuestionPage);\n\nexport default QuestionPage;\n"],"sourceRoot":""}