{"version":3,"sources":["pages/HomePage/index.jsx"],"names":["HomePage","connect","users","questions","userLogged","logged","userData","logged_user","usersRequest","users_request","questionRequest","questions_request","dashboardTabs","useMemo","tabs","title","length","userAnswers","Object","keys","answers","filter","question","includes","id","sort","a","b","timestamp","useState","tab","setTab","useEffect","className","map","dashboardTab","onClick","mode","to"],"mappings":"gNAOA,MAuGMA,EAAWC,aATO,EAAGC,QAAOC,gBAAV,CACtBC,WAAYF,EAAMG,OAClBC,SAAUJ,EAAMK,YAChBC,aAAcN,EAAMO,cAEpBN,UAAWA,EAAUA,UACrBO,gBAAiBP,EAAUQ,qBAGa,KAAzBV,EAvGC,EAChBG,aACAE,WACAH,YACAK,eACAE,sBAEA,MAAME,EAAgBC,mBAAQ,KAC5B,MAAMC,EAAO,CACX,CACEC,MAAO,aACPZ,UAAW,IAEb,CACEY,MAAO,WACPZ,UAAW,KAIf,GAAIG,GAAYH,EAAUa,OAAS,EAAG,CACpC,MAAMC,EAAcC,OAAOC,KAAKb,EAASc,SAEzCN,EAAK,GAAGX,UAAYA,EACjBkB,QAAQC,IAAcL,EAAYM,SAASD,EAASE,MACpDC,MAAK,CAACC,EAAGC,IACDA,EAAEC,UAAYF,EAAEE,YAG3Bd,EAAK,GAAGX,UAAYA,EACjBkB,QAAQC,GAAaL,EAAYM,SAASD,EAASE,MACnDC,MAAK,CAACC,EAAGC,IACDA,EAAEC,UAAYF,EAAEE,YAI7B,OAAOd,IACN,CAACX,EAAWG,IA9BX,EAgCkBuB,mBAASjB,EAAc,IAhCzC,mBAgCGkB,EAhCH,KAgCQC,EAhCR,KAwCJ,OANAC,qBAAU,KACJ1B,GAAYH,EAAUa,OAAS,GAAKJ,GACtCmB,EAAOnB,EAAc,MAEtB,CAACT,EAAWG,EAAUM,IAEpBR,EAIDI,GAAgBE,EACX,cAAC,IAAD,IAIP,sBAAKuB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,4BACA,qBAAKA,UAAU,sBAAf,SACGrB,EAAcsB,KAAKC,GAClB,qBAEEF,UAAS,yBACPE,EAAapB,QAAUe,EAAIf,MAAQ,wBAA0B,IAE/DqB,QAAS,IAAML,EAAOI,GALxB,SAOGA,EAAapB,OANToB,EAAapB,WAUxB,qBAAKkB,UAAU,uBAAf,SACGH,EAAI3B,UAAUa,OAAS,EACtB,cAAC,WAAD,UACGc,EAAI3B,UAAU+B,KAAKZ,GAClB,cAAC,IAAD,CAEEW,UAAU,2BACVX,SAAUA,EACVe,KAAK,WAHAf,EAASE,QAQpB,qBAAKS,UAAU,8BAAf,SACiB,aAAdH,EAAIf,MACD,uCACA,2CAvCL,cAAC,IAAD,CAAUuB,GAAI,sBA0DVtC","file":"static/js/6.6c5677e2.chunk.js","sourcesContent":["import React, { useState, useMemo, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { QuestionCard, Preloader } from '../../components';\nimport './index.scss';\n\nconst _HomePage = ({\n  userLogged,\n  userData,\n  questions,\n  usersRequest,\n  questionRequest,\n}) => {\n  const dashboardTabs = useMemo(() => {\n    const tabs = [\n      {\n        title: 'Unanswered',\n        questions: [],\n      },\n      {\n        title: 'Answered',\n        questions: [],\n      },\n    ];\n\n    if (userData && questions.length > 0) {\n      const userAnswers = Object.keys(userData.answers);\n\n      tabs[0].questions = questions\n        .filter((question) => !userAnswers.includes(question.id))\n        .sort((a, b) => {\n          return b.timestamp - a.timestamp;\n        });\n\n      tabs[1].questions = questions\n        .filter((question) => userAnswers.includes(question.id))\n        .sort((a, b) => {\n          return b.timestamp - a.timestamp;\n        });\n    }\n\n    return tabs;\n  }, [questions, userData]);\n\n  const [tab, setTab] = useState(dashboardTabs[0]);\n\n  useEffect(() => {\n    if (userData && questions.length > 0 && dashboardTabs) {\n      setTab(dashboardTabs[0]);\n    }\n  }, [questions, userData, dashboardTabs]);\n\n  if (!userLogged) {\n    return <Redirect to={'/authorization'} />;\n  }\n\n  if (usersRequest || questionRequest) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className=\"home_page\">\n      <div className=\"home_page__title\">Your dashboard</div>\n      <div className=\"home_page__selector\">\n        {dashboardTabs.map((dashboardTab) => (\n          <div\n            key={dashboardTab.title}\n            className={`home_page__tab ${\n              dashboardTab.title === tab.title ? 'home_page__active_tab' : ''\n            }`}\n            onClick={() => setTab(dashboardTab)}\n          >\n            {dashboardTab.title}\n          </div>\n        ))}\n      </div>\n      <div className=\"home_page__questions\">\n        {tab.questions.length > 0 ? (\n          <Fragment>\n            {tab.questions.map((question) => (\n              <QuestionCard\n                key={question.id}\n                className=\"home_page__question_card\"\n                question={question}\n                mode=\"preview\"\n              />\n            ))}\n          </Fragment>\n        ) : (\n          <div className=\"home_page__questions__empty\">\n            {tab.title === 'Answered'\n              ? \"You don't have any answered question\"\n              : \"You've answered all the questions\"}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users, questions }) => ({\n  userLogged: users.logged,\n  userData: users.logged_user,\n  usersRequest: users.users_request,\n\n  questions: questions.questions,\n  questionRequest: questions.questions_request,\n});\n\nconst HomePage = connect(mapStateToProps, null)(_HomePage);\n\nexport default HomePage;\n"],"sourceRoot":""}