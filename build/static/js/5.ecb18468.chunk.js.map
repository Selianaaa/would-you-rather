{"version":3,"sources":["pages/AuthorizationPage/index.js"],"names":["AuthorizationPage","connect","users","usersRequest","users_request","userIsLogged","logged","dispatch","bindActionCreators","usersActions","setLoggedUser","useState","userName","setUserName","useEffect","length","name","to","className","value","onChange","e","target","map","user","id","onClick","userData","find","alert","loginUser"],"mappings":"sOASA,MAwEMA,EAAoBC,aAVF,EAAGC,YAAH,CACtBA,MAAOA,EAAMA,MACbC,aAAcD,EAAME,cACpBC,aAAcH,EAAMI,WAGMC,GAAD,eACtBC,YAAmBC,IAAcF,KAGZN,EAxEC,EACzBC,QACAC,eACAE,eACAK,oBACK,MAAD,EAC4BC,mBAAS,IADrC,mBACGC,EADH,KACaC,EADb,KAoBJ,OANAC,qBAAU,KACJZ,EAAMa,OAAS,GACjBF,EAAYX,EAAM,GAAGc,QAEtB,CAACd,IAEAC,EACK,cAAC,IAAD,IAGLE,EACK,cAAC,IAAD,CAAUY,GAAI,MAIrB,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,2BAAf,2BACA,qBAAKA,UAAU,yBAAf,sCACA,sBAAKA,UAAU,2BAAf,UACE,wBACEA,UAAU,4BACVC,MAAOP,EACPQ,SAAWC,IACTR,EAAYQ,EAAEC,OAAOH,QAJzB,SAOGjB,EAAMqB,KAAKC,GACV,wBAAsBL,MAAOK,EAAKR,KAAlC,SACGQ,EAAKR,MADKQ,EAAKC,QAKtB,wBACEP,UAAU,kCACVQ,QAAS,IA7CEV,KACjB,MAAMW,EAAWzB,EAAM0B,MAAMJ,GAASA,EAAKR,OAASA,IAEpD,OAAKW,EAKEjB,EAAciB,IAJnBd,EAAY,IACLgB,MAAM,oBAwCMC,CAAUlB,GAF3B,4BA0BOZ","file":"static/js/5.ecb18468.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { Preloader } from '../../components';\nimport { usersActions } from '../../store';\nimport './index.scss';\n\nconst _AuthorizationPage = ({\n  users,\n  usersRequest,\n  userIsLogged,\n  setLoggedUser,\n}) => {\n  const [userName, setUserName] = useState('');\n\n  const loginUser = (name) => {\n    const userData = users.find((user) => user.name === name);\n\n    if (!userData) {\n      setUserName('');\n      return alert('User not found');\n    }\n\n    return setLoggedUser(userData);\n  };\n\n  useEffect(() => {\n    if (users.length > 0) {\n      setUserName(users[0].name);\n    }\n  }, [users]);\n\n  if (usersRequest) {\n    return <Preloader />;\n  }\n\n  if (userIsLogged) {\n    return <Redirect to={'/'} />;\n  }\n\n  return (\n    <div className=\"page_content\">\n      <div className=\"page_content__page_title\">Authorization</div>\n      <div className=\"page_content__subtitle\">To continue please login</div>\n      <div className=\"page_content__login_form\">\n        <select\n          className=\"page_content__select_user\"\n          value={userName}\n          onChange={(e) => {\n            setUserName(e.target.value);\n          }}\n        >\n          {users.map((user) => (\n            <option key={user.id} value={user.name}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n        <button\n          className=\"page_content__authorization_btn\"\n          onClick={() => loginUser(userName)}\n        >\n          Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users }) => ({\n  users: users.users,\n  usersRequest: users.users_request,\n  userIsLogged: users.logged,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  ...bindActionCreators(usersActions, dispatch),\n});\n\nconst AuthorizationPage = connect(\n  mapStateToProps,\n  mapDispatchtoProps\n)(_AuthorizationPage);\n\nexport default AuthorizationPage;\n"],"sourceRoot":""}